" If you don't understand a setting in here, just type ':h setting'.

" Editor settings
set linebreak
set ignorecase
set smartcase
set number
set relativenumber
set colorcolumn=81

" Set Clipboard
set clipboard=unnamedplus

" TAB settings
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

" Window settings
set splitright
set splitbelow

" Theme
set background=dark
set termguicolors

" Set Leader key
let mapleader = ","

" Backup settings
set backupdir=~/.local/share/nvim/backup
set directory=~/.local/share/nvim/swap
set nowritebackup

" Vim diff split
set diffopt+=vertical

" Default is 4000 i.e. 4s
" set updatetime=500

" Map the missing Y yank
nnoremap Y y$

" Plugin manager
call plug#begin('~/.vim/plugged')

Plug 'editorconfig/editorconfig-vim'
Plug 'nvim-lua/plenary.nvim'
Plug 'tpope/vim-repeat'

" lsp
Plug 'williamboman/mason.nvim'
Plug 'williamboman/mason-lspconfig.nvim'
Plug 'neovim/nvim-lspconfig'

" autocomplete
Plug 'hrsh7th/cmp-nvim-lsp'
Plug 'hrsh7th/cmp-buffer'
Plug 'hrsh7th/cmp-path'
Plug 'hrsh7th/cmp-cmdline'
Plug 'hrsh7th/nvim-cmp'
Plug 'onsails/lspkind.nvim'

" treesitter
Plug 'nvim-treesitter/nvim-treesitter', { 'do': ':TSUpdate' }

" tmux
Plug 'tmux-plugins/vim-tmux'
Plug 'christoomey/vim-tmux-navigator'

" theme
Plug 'lifepillar/vim-solarized8'
Plug 'itchyny/lightline.vim'
Plug 'edkolev/tmuxline.vim'

" file navigation
Plug 'tpope/vim-vinegar'
Plug 'justinmk/vim-gtfo'

" fuzzy finder
Plug 'nvim-telescope/telescope-fzf-native.nvim', { 'do': 'make' }
Plug 'nvim-telescope/telescope.nvim'

" git
Plug 'tpope/vim-fugitive'
Plug 'lewis6991/gitsigns.nvim'

" auto pair
Plug 'windwp/nvim-autopairs'
Plug 'windwp/nvim-ts-autotag'

" tim pope
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-surround'

" Comment
Plug 'numToStr/Comment.nvim'

" snippet
Plug 'mattn/emmet-vim'
Plug 'L3MON4D3/LuaSnip'
Plug 'saadparwaiz1/cmp_luasnip'

" selection and replace
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-abolish'

" test
Plug 'janko-m/vim-test'
Plug 'benmills/vimux'

" linting and formatting
Plug 'w0rp/ale'

" language specifics
Plug 'reisub0/hot-reload.vim'
Plug 'tpope/vim-bundler'
Plug 'ap/vim-css-color'

" miscelleneous
Plug 'metakirby5/codi.vim'

call plug#end()

lua require('init')

" Theme
colorscheme solarized8

let g:lightline = {
  \ 'colorscheme': 'solarized',
  \ }

" EditorConfig settings
let g:EditorConfig_exclude_patterns = ['fugitive://.*']

" Explorer settings
let g:netrw_preview = 1
let g:netrw_alto = 0
let g:netrw_winsize = 25

" free c-l from netrw's plug mapping
nmap <leader><leader><leader>l <Plug>NetrwRefresh

" Telescope
nnoremap <leader>f <cmd>lua require('telescope.builtin').find_files()<cr>
nnoremap <leader>s <cmd>lua require('telescope.builtin').live_grep()<cr>
nnoremap <leader>fb <cmd>lua require('telescope.builtin').buffers()<cr>
nnoremap <leader>fh <cmd>lua require('telescope.builtin').help_tags()<cr>

" Vim test mappings
nmap <silent> <leader>t :TestNearest<CR>
nmap <silent> <leader>T :TestFile<CR>
nmap <silent> <leader>a :TestSuite<CR>
nmap <silent> <leader>l :TestLast<CR>
nmap <silent> <leader>g :TestVisit<CR>

" Neovim terminal mappings
if has('nvim')
  tnoremap <ESC> <C-\><C-n>
  tnoremap <C-h> <C-\><C-n><C-w>h
  tnoremap <C-j> <C-\><C-n><C-w>j
  tnoremap <C-k> <C-\><C-n><C-w>k
  tnoremap <C-l> <C-\><C-n><C-w>l
endif


" make test commands execute using vimux
let test#strategy = 'vimux'
let g:VimuxHeight = "40"

let g:python3_host_prog = "/usr/bin/python3"

" Prettify Json files
nnoremap <Leader>fj :%!jq '.'<CR>

" ALE
let g:ale_ruby_rubocop_executable = 'bundle'

" Use slim syntax highlighting for inky files
autocmd BufNewFile,BufRead *.inky set syntax=slim
